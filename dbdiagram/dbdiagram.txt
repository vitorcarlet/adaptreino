// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table athletes_notes{
  id integer [primary key]
  athlete_id integer
  desc string
}

Table athletes {
  id integer [primary key]
  name varchar
  age integer
  photo string
  created_at timestamp
}

Table sports {
  id integer [primary key]
  name varchar
}

Table trainings {
  id integer [primary key]
  user_id integer
  date timestamp
  notes text
  model_id integer // Nullable: Predefined model reference
  sport_id integer 
  created_at timestamp
  updated_at timestamp
}

Table training_models {
  id integer [primary key]
  name varchar
  description text
  sport_id integer
   //fields json
}

Table training_model_fields {
  id integer [primary key]
  training_model_id integer
  field_name varchar
  field_type varchar // Example: 'text', 'number', 'boolean', etc.
  required boolean
  default_value varchar [null]
}

Table training_model_athlete_fields {
  id integer [primary key]
  training_model_fields_id integer
  field_name varchar
  field_type varchar
  required boolean
  default_value varchar [null]
}

// Table extra_training_fields {
//   id integer [primary key]
//   training_id integer
//   field_name varchar
//   value varchar
// }




Ref: trainings.user_id <> athletes.id // Many-to-One: A training belongs to an athlete
Ref: trainings.model_id > training_models.id // Optional: Training may be based on a model
//Ref: extra_training_fields.training_id > trainings.id // Training may have extra fields

Ref: training_models.sport_id > sports.id
Ref: trainings.sport_id > sports.id

Ref: athletes_notes.athlete_id > athletes.id

Ref: training_model_fields.training_model_id > training_models.id
Ref: training_model_athlete_fields.training_model_fields_id - training_model_fields.id